#!/usr/bin/env python3

# Script:                       opschallange 32
# Author:                       Bryanna Fox
# Date of latest revision:      2/20/2024
# Purpose:                      Malware part 2

import os
import hashlib
import datetime

def calculate_md5(file_path):
    """Calculate the MD5 hash of a file."""
    hasher = hashlib.md5()
    with open(file_path, 'rb') as f:
        for chunk in iter(lambda: f.read(4096), b''):
            hasher.update(chunk)
    return hasher.hexdigest()

def scan_directory(directory_path):
    """
    Recursively scan each file and folder in the directory.

    Args:
        directory_path (str): The path of the directory to scan.
    """
    for root, _, files in os.walk(directory_path):
        for file_name in files:
            file_path = os.path.join(root, file_name)
            # Ensure it's a file, not a symbolic link
            if os.path.isfile(file_path):
                file_size = os.path.getsize(file_path)
                md5_hash = calculate_md5(file_path)
                timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                print(f"[{timestamp}] File: {file_name}, Size: {file_size} bytes, Path: {file_path}, MD5: {md5_hash}")

if __name__ == "__main__":
    directory_path = input("Enter the directory path to scan: ")
    scan_directory(directory_path)
